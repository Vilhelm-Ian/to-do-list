// Next.js API route support: https://nextjs.org/docs/api-routes/introduction
import type { NextApiRequest, NextApiResponse } from 'next'
import {Schema, model, connect} from "mongoose"
import bcrypt from "bcrypt"
import dbConnect from "../../utils/dbConnect"
import UserModel, {User} from "../../models/userModel"
import jwt from "jsonwebtoken"

interface Response {
  username: string,
  to_dos: string[]
}

type Data = {
  name: string,
}

async function run(form_data: User)  {
await dbConnect()
let user = await  UserModel.find({"username":form_data.username},"password to_dos username")
let match = await bcrypt.compare(form_data.password, user[0].password)
if(match) return user[0] 
else throw "failed login" 
}

async function jwt_sign(data: Response) {
  let payload = {}
  let secretKey = String(process.env.JWT_KEY)
  return await jwt.sign(payload, secretKey)
}

export default function handler(
  req: NextApiRequest,
  res: NextApiResponse<Data>
) {
  return run(req.body).catch(err=>console.log(err))
  .then((result: User)=>{
      let response: Response  = {username: result.username, to_dos: result.to_dos} 
      jwt_sign(response)
      .then(token=> res.status(200).json({name: token}))
      //let data = JSON.stringify(response)
      //return res.status(200).json({content: data})
  })
}
